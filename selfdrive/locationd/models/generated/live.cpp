#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3075168618539510648) {
   out_3075168618539510648[0] = 0;
   out_3075168618539510648[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3075168618539510648[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3075168618539510648[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3075168618539510648[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3075168618539510648[5] = -sin(in_vec[1]);
   out_3075168618539510648[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3075168618539510648[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3075168618539510648[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3075168618539510648[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3075168618539510648[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3075168618539510648[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3075168618539510648[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3075168618539510648[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3075168618539510648[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3075168618539510648[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3075168618539510648[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3075168618539510648[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1090245281905906660) {
   out_1090245281905906660[0] = delta_x[0] + nom_x[0];
   out_1090245281905906660[1] = delta_x[1] + nom_x[1];
   out_1090245281905906660[2] = delta_x[2] + nom_x[2];
   out_1090245281905906660[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1090245281905906660[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1090245281905906660[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1090245281905906660[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1090245281905906660[7] = delta_x[6] + nom_x[7];
   out_1090245281905906660[8] = delta_x[7] + nom_x[8];
   out_1090245281905906660[9] = delta_x[8] + nom_x[9];
   out_1090245281905906660[10] = delta_x[9] + nom_x[10];
   out_1090245281905906660[11] = delta_x[10] + nom_x[11];
   out_1090245281905906660[12] = delta_x[11] + nom_x[12];
   out_1090245281905906660[13] = delta_x[12] + nom_x[13];
   out_1090245281905906660[14] = delta_x[13] + nom_x[14];
   out_1090245281905906660[15] = delta_x[14] + nom_x[15];
   out_1090245281905906660[16] = delta_x[15] + nom_x[16];
   out_1090245281905906660[17] = delta_x[16] + nom_x[17];
   out_1090245281905906660[18] = delta_x[17] + nom_x[18];
   out_1090245281905906660[19] = delta_x[18] + nom_x[19];
   out_1090245281905906660[20] = delta_x[19] + nom_x[20];
   out_1090245281905906660[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8851414583690127304) {
   out_8851414583690127304[0] = -nom_x[0] + true_x[0];
   out_8851414583690127304[1] = -nom_x[1] + true_x[1];
   out_8851414583690127304[2] = -nom_x[2] + true_x[2];
   out_8851414583690127304[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8851414583690127304[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8851414583690127304[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8851414583690127304[6] = -nom_x[7] + true_x[7];
   out_8851414583690127304[7] = -nom_x[8] + true_x[8];
   out_8851414583690127304[8] = -nom_x[9] + true_x[9];
   out_8851414583690127304[9] = -nom_x[10] + true_x[10];
   out_8851414583690127304[10] = -nom_x[11] + true_x[11];
   out_8851414583690127304[11] = -nom_x[12] + true_x[12];
   out_8851414583690127304[12] = -nom_x[13] + true_x[13];
   out_8851414583690127304[13] = -nom_x[14] + true_x[14];
   out_8851414583690127304[14] = -nom_x[15] + true_x[15];
   out_8851414583690127304[15] = -nom_x[16] + true_x[16];
   out_8851414583690127304[16] = -nom_x[17] + true_x[17];
   out_8851414583690127304[17] = -nom_x[18] + true_x[18];
   out_8851414583690127304[18] = -nom_x[19] + true_x[19];
   out_8851414583690127304[19] = -nom_x[20] + true_x[20];
   out_8851414583690127304[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2951829955177005887) {
   out_2951829955177005887[0] = 1.0;
   out_2951829955177005887[1] = 0.0;
   out_2951829955177005887[2] = 0.0;
   out_2951829955177005887[3] = 0.0;
   out_2951829955177005887[4] = 0.0;
   out_2951829955177005887[5] = 0.0;
   out_2951829955177005887[6] = 0.0;
   out_2951829955177005887[7] = 0.0;
   out_2951829955177005887[8] = 0.0;
   out_2951829955177005887[9] = 0.0;
   out_2951829955177005887[10] = 0.0;
   out_2951829955177005887[11] = 0.0;
   out_2951829955177005887[12] = 0.0;
   out_2951829955177005887[13] = 0.0;
   out_2951829955177005887[14] = 0.0;
   out_2951829955177005887[15] = 0.0;
   out_2951829955177005887[16] = 0.0;
   out_2951829955177005887[17] = 0.0;
   out_2951829955177005887[18] = 0.0;
   out_2951829955177005887[19] = 0.0;
   out_2951829955177005887[20] = 0.0;
   out_2951829955177005887[21] = 0.0;
   out_2951829955177005887[22] = 1.0;
   out_2951829955177005887[23] = 0.0;
   out_2951829955177005887[24] = 0.0;
   out_2951829955177005887[25] = 0.0;
   out_2951829955177005887[26] = 0.0;
   out_2951829955177005887[27] = 0.0;
   out_2951829955177005887[28] = 0.0;
   out_2951829955177005887[29] = 0.0;
   out_2951829955177005887[30] = 0.0;
   out_2951829955177005887[31] = 0.0;
   out_2951829955177005887[32] = 0.0;
   out_2951829955177005887[33] = 0.0;
   out_2951829955177005887[34] = 0.0;
   out_2951829955177005887[35] = 0.0;
   out_2951829955177005887[36] = 0.0;
   out_2951829955177005887[37] = 0.0;
   out_2951829955177005887[38] = 0.0;
   out_2951829955177005887[39] = 0.0;
   out_2951829955177005887[40] = 0.0;
   out_2951829955177005887[41] = 0.0;
   out_2951829955177005887[42] = 0.0;
   out_2951829955177005887[43] = 0.0;
   out_2951829955177005887[44] = 1.0;
   out_2951829955177005887[45] = 0.0;
   out_2951829955177005887[46] = 0.0;
   out_2951829955177005887[47] = 0.0;
   out_2951829955177005887[48] = 0.0;
   out_2951829955177005887[49] = 0.0;
   out_2951829955177005887[50] = 0.0;
   out_2951829955177005887[51] = 0.0;
   out_2951829955177005887[52] = 0.0;
   out_2951829955177005887[53] = 0.0;
   out_2951829955177005887[54] = 0.0;
   out_2951829955177005887[55] = 0.0;
   out_2951829955177005887[56] = 0.0;
   out_2951829955177005887[57] = 0.0;
   out_2951829955177005887[58] = 0.0;
   out_2951829955177005887[59] = 0.0;
   out_2951829955177005887[60] = 0.0;
   out_2951829955177005887[61] = 0.0;
   out_2951829955177005887[62] = 0.0;
   out_2951829955177005887[63] = 0.0;
   out_2951829955177005887[64] = 0.0;
   out_2951829955177005887[65] = 0.0;
   out_2951829955177005887[66] = -0.5*state[4];
   out_2951829955177005887[67] = -0.5*state[5];
   out_2951829955177005887[68] = -0.5*state[6];
   out_2951829955177005887[69] = 0.0;
   out_2951829955177005887[70] = 0.0;
   out_2951829955177005887[71] = 0.0;
   out_2951829955177005887[72] = 0.0;
   out_2951829955177005887[73] = 0.0;
   out_2951829955177005887[74] = 0.0;
   out_2951829955177005887[75] = 0.0;
   out_2951829955177005887[76] = 0.0;
   out_2951829955177005887[77] = 0.0;
   out_2951829955177005887[78] = 0.0;
   out_2951829955177005887[79] = 0.0;
   out_2951829955177005887[80] = 0.0;
   out_2951829955177005887[81] = 0.0;
   out_2951829955177005887[82] = 0.0;
   out_2951829955177005887[83] = 0.0;
   out_2951829955177005887[84] = 0.0;
   out_2951829955177005887[85] = 0.0;
   out_2951829955177005887[86] = 0.0;
   out_2951829955177005887[87] = 0.5*state[3];
   out_2951829955177005887[88] = 0.5*state[6];
   out_2951829955177005887[89] = -0.5*state[5];
   out_2951829955177005887[90] = 0.0;
   out_2951829955177005887[91] = 0.0;
   out_2951829955177005887[92] = 0.0;
   out_2951829955177005887[93] = 0.0;
   out_2951829955177005887[94] = 0.0;
   out_2951829955177005887[95] = 0.0;
   out_2951829955177005887[96] = 0.0;
   out_2951829955177005887[97] = 0.0;
   out_2951829955177005887[98] = 0.0;
   out_2951829955177005887[99] = 0.0;
   out_2951829955177005887[100] = 0.0;
   out_2951829955177005887[101] = 0.0;
   out_2951829955177005887[102] = 0.0;
   out_2951829955177005887[103] = 0.0;
   out_2951829955177005887[104] = 0.0;
   out_2951829955177005887[105] = 0.0;
   out_2951829955177005887[106] = 0.0;
   out_2951829955177005887[107] = 0.0;
   out_2951829955177005887[108] = -0.5*state[6];
   out_2951829955177005887[109] = 0.5*state[3];
   out_2951829955177005887[110] = 0.5*state[4];
   out_2951829955177005887[111] = 0.0;
   out_2951829955177005887[112] = 0.0;
   out_2951829955177005887[113] = 0.0;
   out_2951829955177005887[114] = 0.0;
   out_2951829955177005887[115] = 0.0;
   out_2951829955177005887[116] = 0.0;
   out_2951829955177005887[117] = 0.0;
   out_2951829955177005887[118] = 0.0;
   out_2951829955177005887[119] = 0.0;
   out_2951829955177005887[120] = 0.0;
   out_2951829955177005887[121] = 0.0;
   out_2951829955177005887[122] = 0.0;
   out_2951829955177005887[123] = 0.0;
   out_2951829955177005887[124] = 0.0;
   out_2951829955177005887[125] = 0.0;
   out_2951829955177005887[126] = 0.0;
   out_2951829955177005887[127] = 0.0;
   out_2951829955177005887[128] = 0.0;
   out_2951829955177005887[129] = 0.5*state[5];
   out_2951829955177005887[130] = -0.5*state[4];
   out_2951829955177005887[131] = 0.5*state[3];
   out_2951829955177005887[132] = 0.0;
   out_2951829955177005887[133] = 0.0;
   out_2951829955177005887[134] = 0.0;
   out_2951829955177005887[135] = 0.0;
   out_2951829955177005887[136] = 0.0;
   out_2951829955177005887[137] = 0.0;
   out_2951829955177005887[138] = 0.0;
   out_2951829955177005887[139] = 0.0;
   out_2951829955177005887[140] = 0.0;
   out_2951829955177005887[141] = 0.0;
   out_2951829955177005887[142] = 0.0;
   out_2951829955177005887[143] = 0.0;
   out_2951829955177005887[144] = 0.0;
   out_2951829955177005887[145] = 0.0;
   out_2951829955177005887[146] = 0.0;
   out_2951829955177005887[147] = 0.0;
   out_2951829955177005887[148] = 0.0;
   out_2951829955177005887[149] = 0.0;
   out_2951829955177005887[150] = 0.0;
   out_2951829955177005887[151] = 0.0;
   out_2951829955177005887[152] = 0.0;
   out_2951829955177005887[153] = 1.0;
   out_2951829955177005887[154] = 0.0;
   out_2951829955177005887[155] = 0.0;
   out_2951829955177005887[156] = 0.0;
   out_2951829955177005887[157] = 0.0;
   out_2951829955177005887[158] = 0.0;
   out_2951829955177005887[159] = 0.0;
   out_2951829955177005887[160] = 0.0;
   out_2951829955177005887[161] = 0.0;
   out_2951829955177005887[162] = 0.0;
   out_2951829955177005887[163] = 0.0;
   out_2951829955177005887[164] = 0.0;
   out_2951829955177005887[165] = 0.0;
   out_2951829955177005887[166] = 0.0;
   out_2951829955177005887[167] = 0.0;
   out_2951829955177005887[168] = 0.0;
   out_2951829955177005887[169] = 0.0;
   out_2951829955177005887[170] = 0.0;
   out_2951829955177005887[171] = 0.0;
   out_2951829955177005887[172] = 0.0;
   out_2951829955177005887[173] = 0.0;
   out_2951829955177005887[174] = 0.0;
   out_2951829955177005887[175] = 1.0;
   out_2951829955177005887[176] = 0.0;
   out_2951829955177005887[177] = 0.0;
   out_2951829955177005887[178] = 0.0;
   out_2951829955177005887[179] = 0.0;
   out_2951829955177005887[180] = 0.0;
   out_2951829955177005887[181] = 0.0;
   out_2951829955177005887[182] = 0.0;
   out_2951829955177005887[183] = 0.0;
   out_2951829955177005887[184] = 0.0;
   out_2951829955177005887[185] = 0.0;
   out_2951829955177005887[186] = 0.0;
   out_2951829955177005887[187] = 0.0;
   out_2951829955177005887[188] = 0.0;
   out_2951829955177005887[189] = 0.0;
   out_2951829955177005887[190] = 0.0;
   out_2951829955177005887[191] = 0.0;
   out_2951829955177005887[192] = 0.0;
   out_2951829955177005887[193] = 0.0;
   out_2951829955177005887[194] = 0.0;
   out_2951829955177005887[195] = 0.0;
   out_2951829955177005887[196] = 0.0;
   out_2951829955177005887[197] = 1.0;
   out_2951829955177005887[198] = 0.0;
   out_2951829955177005887[199] = 0.0;
   out_2951829955177005887[200] = 0.0;
   out_2951829955177005887[201] = 0.0;
   out_2951829955177005887[202] = 0.0;
   out_2951829955177005887[203] = 0.0;
   out_2951829955177005887[204] = 0.0;
   out_2951829955177005887[205] = 0.0;
   out_2951829955177005887[206] = 0.0;
   out_2951829955177005887[207] = 0.0;
   out_2951829955177005887[208] = 0.0;
   out_2951829955177005887[209] = 0.0;
   out_2951829955177005887[210] = 0.0;
   out_2951829955177005887[211] = 0.0;
   out_2951829955177005887[212] = 0.0;
   out_2951829955177005887[213] = 0.0;
   out_2951829955177005887[214] = 0.0;
   out_2951829955177005887[215] = 0.0;
   out_2951829955177005887[216] = 0.0;
   out_2951829955177005887[217] = 0.0;
   out_2951829955177005887[218] = 0.0;
   out_2951829955177005887[219] = 1.0;
   out_2951829955177005887[220] = 0.0;
   out_2951829955177005887[221] = 0.0;
   out_2951829955177005887[222] = 0.0;
   out_2951829955177005887[223] = 0.0;
   out_2951829955177005887[224] = 0.0;
   out_2951829955177005887[225] = 0.0;
   out_2951829955177005887[226] = 0.0;
   out_2951829955177005887[227] = 0.0;
   out_2951829955177005887[228] = 0.0;
   out_2951829955177005887[229] = 0.0;
   out_2951829955177005887[230] = 0.0;
   out_2951829955177005887[231] = 0.0;
   out_2951829955177005887[232] = 0.0;
   out_2951829955177005887[233] = 0.0;
   out_2951829955177005887[234] = 0.0;
   out_2951829955177005887[235] = 0.0;
   out_2951829955177005887[236] = 0.0;
   out_2951829955177005887[237] = 0.0;
   out_2951829955177005887[238] = 0.0;
   out_2951829955177005887[239] = 0.0;
   out_2951829955177005887[240] = 0.0;
   out_2951829955177005887[241] = 1.0;
   out_2951829955177005887[242] = 0.0;
   out_2951829955177005887[243] = 0.0;
   out_2951829955177005887[244] = 0.0;
   out_2951829955177005887[245] = 0.0;
   out_2951829955177005887[246] = 0.0;
   out_2951829955177005887[247] = 0.0;
   out_2951829955177005887[248] = 0.0;
   out_2951829955177005887[249] = 0.0;
   out_2951829955177005887[250] = 0.0;
   out_2951829955177005887[251] = 0.0;
   out_2951829955177005887[252] = 0.0;
   out_2951829955177005887[253] = 0.0;
   out_2951829955177005887[254] = 0.0;
   out_2951829955177005887[255] = 0.0;
   out_2951829955177005887[256] = 0.0;
   out_2951829955177005887[257] = 0.0;
   out_2951829955177005887[258] = 0.0;
   out_2951829955177005887[259] = 0.0;
   out_2951829955177005887[260] = 0.0;
   out_2951829955177005887[261] = 0.0;
   out_2951829955177005887[262] = 0.0;
   out_2951829955177005887[263] = 1.0;
   out_2951829955177005887[264] = 0.0;
   out_2951829955177005887[265] = 0.0;
   out_2951829955177005887[266] = 0.0;
   out_2951829955177005887[267] = 0.0;
   out_2951829955177005887[268] = 0.0;
   out_2951829955177005887[269] = 0.0;
   out_2951829955177005887[270] = 0.0;
   out_2951829955177005887[271] = 0.0;
   out_2951829955177005887[272] = 0.0;
   out_2951829955177005887[273] = 0.0;
   out_2951829955177005887[274] = 0.0;
   out_2951829955177005887[275] = 0.0;
   out_2951829955177005887[276] = 0.0;
   out_2951829955177005887[277] = 0.0;
   out_2951829955177005887[278] = 0.0;
   out_2951829955177005887[279] = 0.0;
   out_2951829955177005887[280] = 0.0;
   out_2951829955177005887[281] = 0.0;
   out_2951829955177005887[282] = 0.0;
   out_2951829955177005887[283] = 0.0;
   out_2951829955177005887[284] = 0.0;
   out_2951829955177005887[285] = 1.0;
   out_2951829955177005887[286] = 0.0;
   out_2951829955177005887[287] = 0.0;
   out_2951829955177005887[288] = 0.0;
   out_2951829955177005887[289] = 0.0;
   out_2951829955177005887[290] = 0.0;
   out_2951829955177005887[291] = 0.0;
   out_2951829955177005887[292] = 0.0;
   out_2951829955177005887[293] = 0.0;
   out_2951829955177005887[294] = 0.0;
   out_2951829955177005887[295] = 0.0;
   out_2951829955177005887[296] = 0.0;
   out_2951829955177005887[297] = 0.0;
   out_2951829955177005887[298] = 0.0;
   out_2951829955177005887[299] = 0.0;
   out_2951829955177005887[300] = 0.0;
   out_2951829955177005887[301] = 0.0;
   out_2951829955177005887[302] = 0.0;
   out_2951829955177005887[303] = 0.0;
   out_2951829955177005887[304] = 0.0;
   out_2951829955177005887[305] = 0.0;
   out_2951829955177005887[306] = 0.0;
   out_2951829955177005887[307] = 1.0;
   out_2951829955177005887[308] = 0.0;
   out_2951829955177005887[309] = 0.0;
   out_2951829955177005887[310] = 0.0;
   out_2951829955177005887[311] = 0.0;
   out_2951829955177005887[312] = 0.0;
   out_2951829955177005887[313] = 0.0;
   out_2951829955177005887[314] = 0.0;
   out_2951829955177005887[315] = 0.0;
   out_2951829955177005887[316] = 0.0;
   out_2951829955177005887[317] = 0.0;
   out_2951829955177005887[318] = 0.0;
   out_2951829955177005887[319] = 0.0;
   out_2951829955177005887[320] = 0.0;
   out_2951829955177005887[321] = 0.0;
   out_2951829955177005887[322] = 0.0;
   out_2951829955177005887[323] = 0.0;
   out_2951829955177005887[324] = 0.0;
   out_2951829955177005887[325] = 0.0;
   out_2951829955177005887[326] = 0.0;
   out_2951829955177005887[327] = 0.0;
   out_2951829955177005887[328] = 0.0;
   out_2951829955177005887[329] = 1.0;
   out_2951829955177005887[330] = 0.0;
   out_2951829955177005887[331] = 0.0;
   out_2951829955177005887[332] = 0.0;
   out_2951829955177005887[333] = 0.0;
   out_2951829955177005887[334] = 0.0;
   out_2951829955177005887[335] = 0.0;
   out_2951829955177005887[336] = 0.0;
   out_2951829955177005887[337] = 0.0;
   out_2951829955177005887[338] = 0.0;
   out_2951829955177005887[339] = 0.0;
   out_2951829955177005887[340] = 0.0;
   out_2951829955177005887[341] = 0.0;
   out_2951829955177005887[342] = 0.0;
   out_2951829955177005887[343] = 0.0;
   out_2951829955177005887[344] = 0.0;
   out_2951829955177005887[345] = 0.0;
   out_2951829955177005887[346] = 0.0;
   out_2951829955177005887[347] = 0.0;
   out_2951829955177005887[348] = 0.0;
   out_2951829955177005887[349] = 0.0;
   out_2951829955177005887[350] = 0.0;
   out_2951829955177005887[351] = 1.0;
   out_2951829955177005887[352] = 0.0;
   out_2951829955177005887[353] = 0.0;
   out_2951829955177005887[354] = 0.0;
   out_2951829955177005887[355] = 0.0;
   out_2951829955177005887[356] = 0.0;
   out_2951829955177005887[357] = 0.0;
   out_2951829955177005887[358] = 0.0;
   out_2951829955177005887[359] = 0.0;
   out_2951829955177005887[360] = 0.0;
   out_2951829955177005887[361] = 0.0;
   out_2951829955177005887[362] = 0.0;
   out_2951829955177005887[363] = 0.0;
   out_2951829955177005887[364] = 0.0;
   out_2951829955177005887[365] = 0.0;
   out_2951829955177005887[366] = 0.0;
   out_2951829955177005887[367] = 0.0;
   out_2951829955177005887[368] = 0.0;
   out_2951829955177005887[369] = 0.0;
   out_2951829955177005887[370] = 0.0;
   out_2951829955177005887[371] = 0.0;
   out_2951829955177005887[372] = 0.0;
   out_2951829955177005887[373] = 1.0;
   out_2951829955177005887[374] = 0.0;
   out_2951829955177005887[375] = 0.0;
   out_2951829955177005887[376] = 0.0;
   out_2951829955177005887[377] = 0.0;
   out_2951829955177005887[378] = 0.0;
   out_2951829955177005887[379] = 0.0;
   out_2951829955177005887[380] = 0.0;
   out_2951829955177005887[381] = 0.0;
   out_2951829955177005887[382] = 0.0;
   out_2951829955177005887[383] = 0.0;
   out_2951829955177005887[384] = 0.0;
   out_2951829955177005887[385] = 0.0;
   out_2951829955177005887[386] = 0.0;
   out_2951829955177005887[387] = 0.0;
   out_2951829955177005887[388] = 0.0;
   out_2951829955177005887[389] = 0.0;
   out_2951829955177005887[390] = 0.0;
   out_2951829955177005887[391] = 0.0;
   out_2951829955177005887[392] = 0.0;
   out_2951829955177005887[393] = 0.0;
   out_2951829955177005887[394] = 0.0;
   out_2951829955177005887[395] = 1.0;
   out_2951829955177005887[396] = 0.0;
   out_2951829955177005887[397] = 0.0;
   out_2951829955177005887[398] = 0.0;
   out_2951829955177005887[399] = 0.0;
   out_2951829955177005887[400] = 0.0;
   out_2951829955177005887[401] = 0.0;
   out_2951829955177005887[402] = 0.0;
   out_2951829955177005887[403] = 0.0;
   out_2951829955177005887[404] = 0.0;
   out_2951829955177005887[405] = 0.0;
   out_2951829955177005887[406] = 0.0;
   out_2951829955177005887[407] = 0.0;
   out_2951829955177005887[408] = 0.0;
   out_2951829955177005887[409] = 0.0;
   out_2951829955177005887[410] = 0.0;
   out_2951829955177005887[411] = 0.0;
   out_2951829955177005887[412] = 0.0;
   out_2951829955177005887[413] = 0.0;
   out_2951829955177005887[414] = 0.0;
   out_2951829955177005887[415] = 0.0;
   out_2951829955177005887[416] = 0.0;
   out_2951829955177005887[417] = 1.0;
   out_2951829955177005887[418] = 0.0;
   out_2951829955177005887[419] = 0.0;
   out_2951829955177005887[420] = 0.0;
   out_2951829955177005887[421] = 0.0;
   out_2951829955177005887[422] = 0.0;
   out_2951829955177005887[423] = 0.0;
   out_2951829955177005887[424] = 0.0;
   out_2951829955177005887[425] = 0.0;
   out_2951829955177005887[426] = 0.0;
   out_2951829955177005887[427] = 0.0;
   out_2951829955177005887[428] = 0.0;
   out_2951829955177005887[429] = 0.0;
   out_2951829955177005887[430] = 0.0;
   out_2951829955177005887[431] = 0.0;
   out_2951829955177005887[432] = 0.0;
   out_2951829955177005887[433] = 0.0;
   out_2951829955177005887[434] = 0.0;
   out_2951829955177005887[435] = 0.0;
   out_2951829955177005887[436] = 0.0;
   out_2951829955177005887[437] = 0.0;
   out_2951829955177005887[438] = 0.0;
   out_2951829955177005887[439] = 1.0;
   out_2951829955177005887[440] = 0.0;
   out_2951829955177005887[441] = 0.0;
   out_2951829955177005887[442] = 0.0;
   out_2951829955177005887[443] = 0.0;
   out_2951829955177005887[444] = 0.0;
   out_2951829955177005887[445] = 0.0;
   out_2951829955177005887[446] = 0.0;
   out_2951829955177005887[447] = 0.0;
   out_2951829955177005887[448] = 0.0;
   out_2951829955177005887[449] = 0.0;
   out_2951829955177005887[450] = 0.0;
   out_2951829955177005887[451] = 0.0;
   out_2951829955177005887[452] = 0.0;
   out_2951829955177005887[453] = 0.0;
   out_2951829955177005887[454] = 0.0;
   out_2951829955177005887[455] = 0.0;
   out_2951829955177005887[456] = 0.0;
   out_2951829955177005887[457] = 0.0;
   out_2951829955177005887[458] = 0.0;
   out_2951829955177005887[459] = 0.0;
   out_2951829955177005887[460] = 0.0;
   out_2951829955177005887[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3814539948165517167) {
   out_3814539948165517167[0] = dt*state[7] + state[0];
   out_3814539948165517167[1] = dt*state[8] + state[1];
   out_3814539948165517167[2] = dt*state[9] + state[2];
   out_3814539948165517167[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3814539948165517167[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3814539948165517167[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3814539948165517167[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3814539948165517167[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3814539948165517167[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3814539948165517167[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3814539948165517167[10] = state[10];
   out_3814539948165517167[11] = state[11];
   out_3814539948165517167[12] = state[12];
   out_3814539948165517167[13] = state[13];
   out_3814539948165517167[14] = state[14];
   out_3814539948165517167[15] = state[15];
   out_3814539948165517167[16] = state[16];
   out_3814539948165517167[17] = state[17];
   out_3814539948165517167[18] = state[18];
   out_3814539948165517167[19] = state[19];
   out_3814539948165517167[20] = state[20];
   out_3814539948165517167[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7875956373086618253) {
   out_7875956373086618253[0] = 1;
   out_7875956373086618253[1] = 0;
   out_7875956373086618253[2] = 0;
   out_7875956373086618253[3] = 0;
   out_7875956373086618253[4] = 0;
   out_7875956373086618253[5] = 0;
   out_7875956373086618253[6] = dt;
   out_7875956373086618253[7] = 0;
   out_7875956373086618253[8] = 0;
   out_7875956373086618253[9] = 0;
   out_7875956373086618253[10] = 0;
   out_7875956373086618253[11] = 0;
   out_7875956373086618253[12] = 0;
   out_7875956373086618253[13] = 0;
   out_7875956373086618253[14] = 0;
   out_7875956373086618253[15] = 0;
   out_7875956373086618253[16] = 0;
   out_7875956373086618253[17] = 0;
   out_7875956373086618253[18] = 0;
   out_7875956373086618253[19] = 0;
   out_7875956373086618253[20] = 0;
   out_7875956373086618253[21] = 0;
   out_7875956373086618253[22] = 1;
   out_7875956373086618253[23] = 0;
   out_7875956373086618253[24] = 0;
   out_7875956373086618253[25] = 0;
   out_7875956373086618253[26] = 0;
   out_7875956373086618253[27] = 0;
   out_7875956373086618253[28] = dt;
   out_7875956373086618253[29] = 0;
   out_7875956373086618253[30] = 0;
   out_7875956373086618253[31] = 0;
   out_7875956373086618253[32] = 0;
   out_7875956373086618253[33] = 0;
   out_7875956373086618253[34] = 0;
   out_7875956373086618253[35] = 0;
   out_7875956373086618253[36] = 0;
   out_7875956373086618253[37] = 0;
   out_7875956373086618253[38] = 0;
   out_7875956373086618253[39] = 0;
   out_7875956373086618253[40] = 0;
   out_7875956373086618253[41] = 0;
   out_7875956373086618253[42] = 0;
   out_7875956373086618253[43] = 0;
   out_7875956373086618253[44] = 1;
   out_7875956373086618253[45] = 0;
   out_7875956373086618253[46] = 0;
   out_7875956373086618253[47] = 0;
   out_7875956373086618253[48] = 0;
   out_7875956373086618253[49] = 0;
   out_7875956373086618253[50] = dt;
   out_7875956373086618253[51] = 0;
   out_7875956373086618253[52] = 0;
   out_7875956373086618253[53] = 0;
   out_7875956373086618253[54] = 0;
   out_7875956373086618253[55] = 0;
   out_7875956373086618253[56] = 0;
   out_7875956373086618253[57] = 0;
   out_7875956373086618253[58] = 0;
   out_7875956373086618253[59] = 0;
   out_7875956373086618253[60] = 0;
   out_7875956373086618253[61] = 0;
   out_7875956373086618253[62] = 0;
   out_7875956373086618253[63] = 0;
   out_7875956373086618253[64] = 0;
   out_7875956373086618253[65] = 0;
   out_7875956373086618253[66] = 1;
   out_7875956373086618253[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7875956373086618253[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7875956373086618253[69] = 0;
   out_7875956373086618253[70] = 0;
   out_7875956373086618253[71] = 0;
   out_7875956373086618253[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7875956373086618253[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7875956373086618253[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7875956373086618253[75] = 0;
   out_7875956373086618253[76] = 0;
   out_7875956373086618253[77] = 0;
   out_7875956373086618253[78] = 0;
   out_7875956373086618253[79] = 0;
   out_7875956373086618253[80] = 0;
   out_7875956373086618253[81] = 0;
   out_7875956373086618253[82] = 0;
   out_7875956373086618253[83] = 0;
   out_7875956373086618253[84] = 0;
   out_7875956373086618253[85] = 0;
   out_7875956373086618253[86] = 0;
   out_7875956373086618253[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7875956373086618253[88] = 1;
   out_7875956373086618253[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7875956373086618253[90] = 0;
   out_7875956373086618253[91] = 0;
   out_7875956373086618253[92] = 0;
   out_7875956373086618253[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7875956373086618253[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7875956373086618253[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7875956373086618253[96] = 0;
   out_7875956373086618253[97] = 0;
   out_7875956373086618253[98] = 0;
   out_7875956373086618253[99] = 0;
   out_7875956373086618253[100] = 0;
   out_7875956373086618253[101] = 0;
   out_7875956373086618253[102] = 0;
   out_7875956373086618253[103] = 0;
   out_7875956373086618253[104] = 0;
   out_7875956373086618253[105] = 0;
   out_7875956373086618253[106] = 0;
   out_7875956373086618253[107] = 0;
   out_7875956373086618253[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7875956373086618253[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7875956373086618253[110] = 1;
   out_7875956373086618253[111] = 0;
   out_7875956373086618253[112] = 0;
   out_7875956373086618253[113] = 0;
   out_7875956373086618253[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7875956373086618253[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7875956373086618253[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7875956373086618253[117] = 0;
   out_7875956373086618253[118] = 0;
   out_7875956373086618253[119] = 0;
   out_7875956373086618253[120] = 0;
   out_7875956373086618253[121] = 0;
   out_7875956373086618253[122] = 0;
   out_7875956373086618253[123] = 0;
   out_7875956373086618253[124] = 0;
   out_7875956373086618253[125] = 0;
   out_7875956373086618253[126] = 0;
   out_7875956373086618253[127] = 0;
   out_7875956373086618253[128] = 0;
   out_7875956373086618253[129] = 0;
   out_7875956373086618253[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7875956373086618253[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7875956373086618253[132] = 1;
   out_7875956373086618253[133] = 0;
   out_7875956373086618253[134] = 0;
   out_7875956373086618253[135] = 0;
   out_7875956373086618253[136] = 0;
   out_7875956373086618253[137] = 0;
   out_7875956373086618253[138] = 0;
   out_7875956373086618253[139] = 0;
   out_7875956373086618253[140] = 0;
   out_7875956373086618253[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7875956373086618253[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7875956373086618253[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7875956373086618253[144] = 0;
   out_7875956373086618253[145] = 0;
   out_7875956373086618253[146] = 0;
   out_7875956373086618253[147] = 0;
   out_7875956373086618253[148] = 0;
   out_7875956373086618253[149] = 0;
   out_7875956373086618253[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7875956373086618253[151] = 0;
   out_7875956373086618253[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7875956373086618253[153] = 0;
   out_7875956373086618253[154] = 1;
   out_7875956373086618253[155] = 0;
   out_7875956373086618253[156] = 0;
   out_7875956373086618253[157] = 0;
   out_7875956373086618253[158] = 0;
   out_7875956373086618253[159] = 0;
   out_7875956373086618253[160] = 0;
   out_7875956373086618253[161] = 0;
   out_7875956373086618253[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7875956373086618253[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7875956373086618253[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7875956373086618253[165] = 0;
   out_7875956373086618253[166] = 0;
   out_7875956373086618253[167] = 0;
   out_7875956373086618253[168] = 0;
   out_7875956373086618253[169] = 0;
   out_7875956373086618253[170] = 0;
   out_7875956373086618253[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7875956373086618253[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7875956373086618253[173] = 0;
   out_7875956373086618253[174] = 0;
   out_7875956373086618253[175] = 0;
   out_7875956373086618253[176] = 1;
   out_7875956373086618253[177] = 0;
   out_7875956373086618253[178] = 0;
   out_7875956373086618253[179] = 0;
   out_7875956373086618253[180] = 0;
   out_7875956373086618253[181] = 0;
   out_7875956373086618253[182] = 0;
   out_7875956373086618253[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7875956373086618253[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7875956373086618253[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7875956373086618253[186] = 0;
   out_7875956373086618253[187] = 0;
   out_7875956373086618253[188] = 0;
   out_7875956373086618253[189] = 0;
   out_7875956373086618253[190] = 0;
   out_7875956373086618253[191] = 0;
   out_7875956373086618253[192] = 0;
   out_7875956373086618253[193] = 0;
   out_7875956373086618253[194] = 0;
   out_7875956373086618253[195] = 0;
   out_7875956373086618253[196] = 0;
   out_7875956373086618253[197] = 0;
   out_7875956373086618253[198] = 1;
   out_7875956373086618253[199] = 0;
   out_7875956373086618253[200] = 0;
   out_7875956373086618253[201] = 0;
   out_7875956373086618253[202] = 0;
   out_7875956373086618253[203] = 0;
   out_7875956373086618253[204] = 0;
   out_7875956373086618253[205] = 0;
   out_7875956373086618253[206] = 0;
   out_7875956373086618253[207] = 0;
   out_7875956373086618253[208] = 0;
   out_7875956373086618253[209] = 0;
   out_7875956373086618253[210] = 0;
   out_7875956373086618253[211] = 0;
   out_7875956373086618253[212] = 0;
   out_7875956373086618253[213] = 0;
   out_7875956373086618253[214] = 0;
   out_7875956373086618253[215] = 0;
   out_7875956373086618253[216] = 0;
   out_7875956373086618253[217] = 0;
   out_7875956373086618253[218] = 0;
   out_7875956373086618253[219] = 0;
   out_7875956373086618253[220] = 1;
   out_7875956373086618253[221] = 0;
   out_7875956373086618253[222] = 0;
   out_7875956373086618253[223] = 0;
   out_7875956373086618253[224] = 0;
   out_7875956373086618253[225] = 0;
   out_7875956373086618253[226] = 0;
   out_7875956373086618253[227] = 0;
   out_7875956373086618253[228] = 0;
   out_7875956373086618253[229] = 0;
   out_7875956373086618253[230] = 0;
   out_7875956373086618253[231] = 0;
   out_7875956373086618253[232] = 0;
   out_7875956373086618253[233] = 0;
   out_7875956373086618253[234] = 0;
   out_7875956373086618253[235] = 0;
   out_7875956373086618253[236] = 0;
   out_7875956373086618253[237] = 0;
   out_7875956373086618253[238] = 0;
   out_7875956373086618253[239] = 0;
   out_7875956373086618253[240] = 0;
   out_7875956373086618253[241] = 0;
   out_7875956373086618253[242] = 1;
   out_7875956373086618253[243] = 0;
   out_7875956373086618253[244] = 0;
   out_7875956373086618253[245] = 0;
   out_7875956373086618253[246] = 0;
   out_7875956373086618253[247] = 0;
   out_7875956373086618253[248] = 0;
   out_7875956373086618253[249] = 0;
   out_7875956373086618253[250] = 0;
   out_7875956373086618253[251] = 0;
   out_7875956373086618253[252] = 0;
   out_7875956373086618253[253] = 0;
   out_7875956373086618253[254] = 0;
   out_7875956373086618253[255] = 0;
   out_7875956373086618253[256] = 0;
   out_7875956373086618253[257] = 0;
   out_7875956373086618253[258] = 0;
   out_7875956373086618253[259] = 0;
   out_7875956373086618253[260] = 0;
   out_7875956373086618253[261] = 0;
   out_7875956373086618253[262] = 0;
   out_7875956373086618253[263] = 0;
   out_7875956373086618253[264] = 1;
   out_7875956373086618253[265] = 0;
   out_7875956373086618253[266] = 0;
   out_7875956373086618253[267] = 0;
   out_7875956373086618253[268] = 0;
   out_7875956373086618253[269] = 0;
   out_7875956373086618253[270] = 0;
   out_7875956373086618253[271] = 0;
   out_7875956373086618253[272] = 0;
   out_7875956373086618253[273] = 0;
   out_7875956373086618253[274] = 0;
   out_7875956373086618253[275] = 0;
   out_7875956373086618253[276] = 0;
   out_7875956373086618253[277] = 0;
   out_7875956373086618253[278] = 0;
   out_7875956373086618253[279] = 0;
   out_7875956373086618253[280] = 0;
   out_7875956373086618253[281] = 0;
   out_7875956373086618253[282] = 0;
   out_7875956373086618253[283] = 0;
   out_7875956373086618253[284] = 0;
   out_7875956373086618253[285] = 0;
   out_7875956373086618253[286] = 1;
   out_7875956373086618253[287] = 0;
   out_7875956373086618253[288] = 0;
   out_7875956373086618253[289] = 0;
   out_7875956373086618253[290] = 0;
   out_7875956373086618253[291] = 0;
   out_7875956373086618253[292] = 0;
   out_7875956373086618253[293] = 0;
   out_7875956373086618253[294] = 0;
   out_7875956373086618253[295] = 0;
   out_7875956373086618253[296] = 0;
   out_7875956373086618253[297] = 0;
   out_7875956373086618253[298] = 0;
   out_7875956373086618253[299] = 0;
   out_7875956373086618253[300] = 0;
   out_7875956373086618253[301] = 0;
   out_7875956373086618253[302] = 0;
   out_7875956373086618253[303] = 0;
   out_7875956373086618253[304] = 0;
   out_7875956373086618253[305] = 0;
   out_7875956373086618253[306] = 0;
   out_7875956373086618253[307] = 0;
   out_7875956373086618253[308] = 1;
   out_7875956373086618253[309] = 0;
   out_7875956373086618253[310] = 0;
   out_7875956373086618253[311] = 0;
   out_7875956373086618253[312] = 0;
   out_7875956373086618253[313] = 0;
   out_7875956373086618253[314] = 0;
   out_7875956373086618253[315] = 0;
   out_7875956373086618253[316] = 0;
   out_7875956373086618253[317] = 0;
   out_7875956373086618253[318] = 0;
   out_7875956373086618253[319] = 0;
   out_7875956373086618253[320] = 0;
   out_7875956373086618253[321] = 0;
   out_7875956373086618253[322] = 0;
   out_7875956373086618253[323] = 0;
   out_7875956373086618253[324] = 0;
   out_7875956373086618253[325] = 0;
   out_7875956373086618253[326] = 0;
   out_7875956373086618253[327] = 0;
   out_7875956373086618253[328] = 0;
   out_7875956373086618253[329] = 0;
   out_7875956373086618253[330] = 1;
   out_7875956373086618253[331] = 0;
   out_7875956373086618253[332] = 0;
   out_7875956373086618253[333] = 0;
   out_7875956373086618253[334] = 0;
   out_7875956373086618253[335] = 0;
   out_7875956373086618253[336] = 0;
   out_7875956373086618253[337] = 0;
   out_7875956373086618253[338] = 0;
   out_7875956373086618253[339] = 0;
   out_7875956373086618253[340] = 0;
   out_7875956373086618253[341] = 0;
   out_7875956373086618253[342] = 0;
   out_7875956373086618253[343] = 0;
   out_7875956373086618253[344] = 0;
   out_7875956373086618253[345] = 0;
   out_7875956373086618253[346] = 0;
   out_7875956373086618253[347] = 0;
   out_7875956373086618253[348] = 0;
   out_7875956373086618253[349] = 0;
   out_7875956373086618253[350] = 0;
   out_7875956373086618253[351] = 0;
   out_7875956373086618253[352] = 1;
   out_7875956373086618253[353] = 0;
   out_7875956373086618253[354] = 0;
   out_7875956373086618253[355] = 0;
   out_7875956373086618253[356] = 0;
   out_7875956373086618253[357] = 0;
   out_7875956373086618253[358] = 0;
   out_7875956373086618253[359] = 0;
   out_7875956373086618253[360] = 0;
   out_7875956373086618253[361] = 0;
   out_7875956373086618253[362] = 0;
   out_7875956373086618253[363] = 0;
   out_7875956373086618253[364] = 0;
   out_7875956373086618253[365] = 0;
   out_7875956373086618253[366] = 0;
   out_7875956373086618253[367] = 0;
   out_7875956373086618253[368] = 0;
   out_7875956373086618253[369] = 0;
   out_7875956373086618253[370] = 0;
   out_7875956373086618253[371] = 0;
   out_7875956373086618253[372] = 0;
   out_7875956373086618253[373] = 0;
   out_7875956373086618253[374] = 1;
   out_7875956373086618253[375] = 0;
   out_7875956373086618253[376] = 0;
   out_7875956373086618253[377] = 0;
   out_7875956373086618253[378] = 0;
   out_7875956373086618253[379] = 0;
   out_7875956373086618253[380] = 0;
   out_7875956373086618253[381] = 0;
   out_7875956373086618253[382] = 0;
   out_7875956373086618253[383] = 0;
   out_7875956373086618253[384] = 0;
   out_7875956373086618253[385] = 0;
   out_7875956373086618253[386] = 0;
   out_7875956373086618253[387] = 0;
   out_7875956373086618253[388] = 0;
   out_7875956373086618253[389] = 0;
   out_7875956373086618253[390] = 0;
   out_7875956373086618253[391] = 0;
   out_7875956373086618253[392] = 0;
   out_7875956373086618253[393] = 0;
   out_7875956373086618253[394] = 0;
   out_7875956373086618253[395] = 0;
   out_7875956373086618253[396] = 1;
   out_7875956373086618253[397] = 0;
   out_7875956373086618253[398] = 0;
   out_7875956373086618253[399] = 0;
   out_7875956373086618253[400] = 0;
   out_7875956373086618253[401] = 0;
   out_7875956373086618253[402] = 0;
   out_7875956373086618253[403] = 0;
   out_7875956373086618253[404] = 0;
   out_7875956373086618253[405] = 0;
   out_7875956373086618253[406] = 0;
   out_7875956373086618253[407] = 0;
   out_7875956373086618253[408] = 0;
   out_7875956373086618253[409] = 0;
   out_7875956373086618253[410] = 0;
   out_7875956373086618253[411] = 0;
   out_7875956373086618253[412] = 0;
   out_7875956373086618253[413] = 0;
   out_7875956373086618253[414] = 0;
   out_7875956373086618253[415] = 0;
   out_7875956373086618253[416] = 0;
   out_7875956373086618253[417] = 0;
   out_7875956373086618253[418] = 1;
   out_7875956373086618253[419] = 0;
   out_7875956373086618253[420] = 0;
   out_7875956373086618253[421] = 0;
   out_7875956373086618253[422] = 0;
   out_7875956373086618253[423] = 0;
   out_7875956373086618253[424] = 0;
   out_7875956373086618253[425] = 0;
   out_7875956373086618253[426] = 0;
   out_7875956373086618253[427] = 0;
   out_7875956373086618253[428] = 0;
   out_7875956373086618253[429] = 0;
   out_7875956373086618253[430] = 0;
   out_7875956373086618253[431] = 0;
   out_7875956373086618253[432] = 0;
   out_7875956373086618253[433] = 0;
   out_7875956373086618253[434] = 0;
   out_7875956373086618253[435] = 0;
   out_7875956373086618253[436] = 0;
   out_7875956373086618253[437] = 0;
   out_7875956373086618253[438] = 0;
   out_7875956373086618253[439] = 0;
   out_7875956373086618253[440] = 1;
}
void h_4(double *state, double *unused, double *out_308485439684569826) {
   out_308485439684569826[0] = state[10] + state[13];
   out_308485439684569826[1] = state[11] + state[14];
   out_308485439684569826[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_448820613655623243) {
   out_448820613655623243[0] = 0;
   out_448820613655623243[1] = 0;
   out_448820613655623243[2] = 0;
   out_448820613655623243[3] = 0;
   out_448820613655623243[4] = 0;
   out_448820613655623243[5] = 0;
   out_448820613655623243[6] = 0;
   out_448820613655623243[7] = 0;
   out_448820613655623243[8] = 0;
   out_448820613655623243[9] = 0;
   out_448820613655623243[10] = 1;
   out_448820613655623243[11] = 0;
   out_448820613655623243[12] = 0;
   out_448820613655623243[13] = 1;
   out_448820613655623243[14] = 0;
   out_448820613655623243[15] = 0;
   out_448820613655623243[16] = 0;
   out_448820613655623243[17] = 0;
   out_448820613655623243[18] = 0;
   out_448820613655623243[19] = 0;
   out_448820613655623243[20] = 0;
   out_448820613655623243[21] = 0;
   out_448820613655623243[22] = 0;
   out_448820613655623243[23] = 0;
   out_448820613655623243[24] = 0;
   out_448820613655623243[25] = 0;
   out_448820613655623243[26] = 0;
   out_448820613655623243[27] = 0;
   out_448820613655623243[28] = 0;
   out_448820613655623243[29] = 0;
   out_448820613655623243[30] = 0;
   out_448820613655623243[31] = 0;
   out_448820613655623243[32] = 0;
   out_448820613655623243[33] = 1;
   out_448820613655623243[34] = 0;
   out_448820613655623243[35] = 0;
   out_448820613655623243[36] = 1;
   out_448820613655623243[37] = 0;
   out_448820613655623243[38] = 0;
   out_448820613655623243[39] = 0;
   out_448820613655623243[40] = 0;
   out_448820613655623243[41] = 0;
   out_448820613655623243[42] = 0;
   out_448820613655623243[43] = 0;
   out_448820613655623243[44] = 0;
   out_448820613655623243[45] = 0;
   out_448820613655623243[46] = 0;
   out_448820613655623243[47] = 0;
   out_448820613655623243[48] = 0;
   out_448820613655623243[49] = 0;
   out_448820613655623243[50] = 0;
   out_448820613655623243[51] = 0;
   out_448820613655623243[52] = 0;
   out_448820613655623243[53] = 0;
   out_448820613655623243[54] = 0;
   out_448820613655623243[55] = 0;
   out_448820613655623243[56] = 1;
   out_448820613655623243[57] = 0;
   out_448820613655623243[58] = 0;
   out_448820613655623243[59] = 1;
   out_448820613655623243[60] = 0;
   out_448820613655623243[61] = 0;
   out_448820613655623243[62] = 0;
   out_448820613655623243[63] = 0;
   out_448820613655623243[64] = 0;
   out_448820613655623243[65] = 0;
}
void h_9(double *state, double *unused, double *out_7222384130018568816) {
   out_7222384130018568816[0] = state[10];
   out_7222384130018568816[1] = state[11];
   out_7222384130018568816[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2440040938624456099) {
   out_2440040938624456099[0] = 0;
   out_2440040938624456099[1] = 0;
   out_2440040938624456099[2] = 0;
   out_2440040938624456099[3] = 0;
   out_2440040938624456099[4] = 0;
   out_2440040938624456099[5] = 0;
   out_2440040938624456099[6] = 0;
   out_2440040938624456099[7] = 0;
   out_2440040938624456099[8] = 0;
   out_2440040938624456099[9] = 0;
   out_2440040938624456099[10] = 1;
   out_2440040938624456099[11] = 0;
   out_2440040938624456099[12] = 0;
   out_2440040938624456099[13] = 0;
   out_2440040938624456099[14] = 0;
   out_2440040938624456099[15] = 0;
   out_2440040938624456099[16] = 0;
   out_2440040938624456099[17] = 0;
   out_2440040938624456099[18] = 0;
   out_2440040938624456099[19] = 0;
   out_2440040938624456099[20] = 0;
   out_2440040938624456099[21] = 0;
   out_2440040938624456099[22] = 0;
   out_2440040938624456099[23] = 0;
   out_2440040938624456099[24] = 0;
   out_2440040938624456099[25] = 0;
   out_2440040938624456099[26] = 0;
   out_2440040938624456099[27] = 0;
   out_2440040938624456099[28] = 0;
   out_2440040938624456099[29] = 0;
   out_2440040938624456099[30] = 0;
   out_2440040938624456099[31] = 0;
   out_2440040938624456099[32] = 0;
   out_2440040938624456099[33] = 1;
   out_2440040938624456099[34] = 0;
   out_2440040938624456099[35] = 0;
   out_2440040938624456099[36] = 0;
   out_2440040938624456099[37] = 0;
   out_2440040938624456099[38] = 0;
   out_2440040938624456099[39] = 0;
   out_2440040938624456099[40] = 0;
   out_2440040938624456099[41] = 0;
   out_2440040938624456099[42] = 0;
   out_2440040938624456099[43] = 0;
   out_2440040938624456099[44] = 0;
   out_2440040938624456099[45] = 0;
   out_2440040938624456099[46] = 0;
   out_2440040938624456099[47] = 0;
   out_2440040938624456099[48] = 0;
   out_2440040938624456099[49] = 0;
   out_2440040938624456099[50] = 0;
   out_2440040938624456099[51] = 0;
   out_2440040938624456099[52] = 0;
   out_2440040938624456099[53] = 0;
   out_2440040938624456099[54] = 0;
   out_2440040938624456099[55] = 0;
   out_2440040938624456099[56] = 1;
   out_2440040938624456099[57] = 0;
   out_2440040938624456099[58] = 0;
   out_2440040938624456099[59] = 0;
   out_2440040938624456099[60] = 0;
   out_2440040938624456099[61] = 0;
   out_2440040938624456099[62] = 0;
   out_2440040938624456099[63] = 0;
   out_2440040938624456099[64] = 0;
   out_2440040938624456099[65] = 0;
}
void h_10(double *state, double *unused, double *out_7807615225781965650) {
   out_7807615225781965650[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7807615225781965650[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7807615225781965650[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_106603328486207745) {
   out_106603328486207745[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_106603328486207745[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_106603328486207745[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_106603328486207745[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_106603328486207745[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_106603328486207745[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_106603328486207745[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_106603328486207745[7] = 0;
   out_106603328486207745[8] = 0;
   out_106603328486207745[9] = 0;
   out_106603328486207745[10] = 0;
   out_106603328486207745[11] = 0;
   out_106603328486207745[12] = 0;
   out_106603328486207745[13] = 0;
   out_106603328486207745[14] = 0;
   out_106603328486207745[15] = 0;
   out_106603328486207745[16] = 1;
   out_106603328486207745[17] = 0;
   out_106603328486207745[18] = 0;
   out_106603328486207745[19] = 1;
   out_106603328486207745[20] = 0;
   out_106603328486207745[21] = 0;
   out_106603328486207745[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_106603328486207745[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_106603328486207745[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_106603328486207745[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_106603328486207745[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_106603328486207745[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_106603328486207745[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_106603328486207745[29] = 0;
   out_106603328486207745[30] = 0;
   out_106603328486207745[31] = 0;
   out_106603328486207745[32] = 0;
   out_106603328486207745[33] = 0;
   out_106603328486207745[34] = 0;
   out_106603328486207745[35] = 0;
   out_106603328486207745[36] = 0;
   out_106603328486207745[37] = 0;
   out_106603328486207745[38] = 0;
   out_106603328486207745[39] = 1;
   out_106603328486207745[40] = 0;
   out_106603328486207745[41] = 0;
   out_106603328486207745[42] = 1;
   out_106603328486207745[43] = 0;
   out_106603328486207745[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_106603328486207745[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_106603328486207745[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_106603328486207745[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_106603328486207745[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_106603328486207745[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_106603328486207745[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_106603328486207745[51] = 0;
   out_106603328486207745[52] = 0;
   out_106603328486207745[53] = 0;
   out_106603328486207745[54] = 0;
   out_106603328486207745[55] = 0;
   out_106603328486207745[56] = 0;
   out_106603328486207745[57] = 0;
   out_106603328486207745[58] = 0;
   out_106603328486207745[59] = 0;
   out_106603328486207745[60] = 0;
   out_106603328486207745[61] = 0;
   out_106603328486207745[62] = 1;
   out_106603328486207745[63] = 0;
   out_106603328486207745[64] = 0;
   out_106603328486207745[65] = 1;
}
void h_12(double *state, double *unused, double *out_8240029641751488420) {
   out_8240029641751488420[0] = state[0];
   out_8240029641751488420[1] = state[1];
   out_8240029641751488420[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7218307700026827249) {
   out_7218307700026827249[0] = 1;
   out_7218307700026827249[1] = 0;
   out_7218307700026827249[2] = 0;
   out_7218307700026827249[3] = 0;
   out_7218307700026827249[4] = 0;
   out_7218307700026827249[5] = 0;
   out_7218307700026827249[6] = 0;
   out_7218307700026827249[7] = 0;
   out_7218307700026827249[8] = 0;
   out_7218307700026827249[9] = 0;
   out_7218307700026827249[10] = 0;
   out_7218307700026827249[11] = 0;
   out_7218307700026827249[12] = 0;
   out_7218307700026827249[13] = 0;
   out_7218307700026827249[14] = 0;
   out_7218307700026827249[15] = 0;
   out_7218307700026827249[16] = 0;
   out_7218307700026827249[17] = 0;
   out_7218307700026827249[18] = 0;
   out_7218307700026827249[19] = 0;
   out_7218307700026827249[20] = 0;
   out_7218307700026827249[21] = 0;
   out_7218307700026827249[22] = 0;
   out_7218307700026827249[23] = 1;
   out_7218307700026827249[24] = 0;
   out_7218307700026827249[25] = 0;
   out_7218307700026827249[26] = 0;
   out_7218307700026827249[27] = 0;
   out_7218307700026827249[28] = 0;
   out_7218307700026827249[29] = 0;
   out_7218307700026827249[30] = 0;
   out_7218307700026827249[31] = 0;
   out_7218307700026827249[32] = 0;
   out_7218307700026827249[33] = 0;
   out_7218307700026827249[34] = 0;
   out_7218307700026827249[35] = 0;
   out_7218307700026827249[36] = 0;
   out_7218307700026827249[37] = 0;
   out_7218307700026827249[38] = 0;
   out_7218307700026827249[39] = 0;
   out_7218307700026827249[40] = 0;
   out_7218307700026827249[41] = 0;
   out_7218307700026827249[42] = 0;
   out_7218307700026827249[43] = 0;
   out_7218307700026827249[44] = 0;
   out_7218307700026827249[45] = 0;
   out_7218307700026827249[46] = 1;
   out_7218307700026827249[47] = 0;
   out_7218307700026827249[48] = 0;
   out_7218307700026827249[49] = 0;
   out_7218307700026827249[50] = 0;
   out_7218307700026827249[51] = 0;
   out_7218307700026827249[52] = 0;
   out_7218307700026827249[53] = 0;
   out_7218307700026827249[54] = 0;
   out_7218307700026827249[55] = 0;
   out_7218307700026827249[56] = 0;
   out_7218307700026827249[57] = 0;
   out_7218307700026827249[58] = 0;
   out_7218307700026827249[59] = 0;
   out_7218307700026827249[60] = 0;
   out_7218307700026827249[61] = 0;
   out_7218307700026827249[62] = 0;
   out_7218307700026827249[63] = 0;
   out_7218307700026827249[64] = 0;
   out_7218307700026827249[65] = 0;
}
void h_31(double *state, double *unused, double *out_4739257077166324131) {
   out_4739257077166324131[0] = state[7];
   out_4739257077166324131[1] = state[8];
   out_4739257077166324131[2] = state[9];
}
void H_31(double *state, double *unused, double *out_8482873341357710658) {
   out_8482873341357710658[0] = 0;
   out_8482873341357710658[1] = 0;
   out_8482873341357710658[2] = 0;
   out_8482873341357710658[3] = 0;
   out_8482873341357710658[4] = 0;
   out_8482873341357710658[5] = 0;
   out_8482873341357710658[6] = 0;
   out_8482873341357710658[7] = 1;
   out_8482873341357710658[8] = 0;
   out_8482873341357710658[9] = 0;
   out_8482873341357710658[10] = 0;
   out_8482873341357710658[11] = 0;
   out_8482873341357710658[12] = 0;
   out_8482873341357710658[13] = 0;
   out_8482873341357710658[14] = 0;
   out_8482873341357710658[15] = 0;
   out_8482873341357710658[16] = 0;
   out_8482873341357710658[17] = 0;
   out_8482873341357710658[18] = 0;
   out_8482873341357710658[19] = 0;
   out_8482873341357710658[20] = 0;
   out_8482873341357710658[21] = 0;
   out_8482873341357710658[22] = 0;
   out_8482873341357710658[23] = 0;
   out_8482873341357710658[24] = 0;
   out_8482873341357710658[25] = 0;
   out_8482873341357710658[26] = 0;
   out_8482873341357710658[27] = 0;
   out_8482873341357710658[28] = 0;
   out_8482873341357710658[29] = 0;
   out_8482873341357710658[30] = 1;
   out_8482873341357710658[31] = 0;
   out_8482873341357710658[32] = 0;
   out_8482873341357710658[33] = 0;
   out_8482873341357710658[34] = 0;
   out_8482873341357710658[35] = 0;
   out_8482873341357710658[36] = 0;
   out_8482873341357710658[37] = 0;
   out_8482873341357710658[38] = 0;
   out_8482873341357710658[39] = 0;
   out_8482873341357710658[40] = 0;
   out_8482873341357710658[41] = 0;
   out_8482873341357710658[42] = 0;
   out_8482873341357710658[43] = 0;
   out_8482873341357710658[44] = 0;
   out_8482873341357710658[45] = 0;
   out_8482873341357710658[46] = 0;
   out_8482873341357710658[47] = 0;
   out_8482873341357710658[48] = 0;
   out_8482873341357710658[49] = 0;
   out_8482873341357710658[50] = 0;
   out_8482873341357710658[51] = 0;
   out_8482873341357710658[52] = 0;
   out_8482873341357710658[53] = 1;
   out_8482873341357710658[54] = 0;
   out_8482873341357710658[55] = 0;
   out_8482873341357710658[56] = 0;
   out_8482873341357710658[57] = 0;
   out_8482873341357710658[58] = 0;
   out_8482873341357710658[59] = 0;
   out_8482873341357710658[60] = 0;
   out_8482873341357710658[61] = 0;
   out_8482873341357710658[62] = 0;
   out_8482873341357710658[63] = 0;
   out_8482873341357710658[64] = 0;
   out_8482873341357710658[65] = 0;
}
void h_32(double *state, double *unused, double *out_2545771817069536442) {
   out_2545771817069536442[0] = state[3];
   out_2545771817069536442[1] = state[4];
   out_2545771817069536442[2] = state[5];
   out_2545771817069536442[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8795495036245155686) {
   out_8795495036245155686[0] = 0;
   out_8795495036245155686[1] = 0;
   out_8795495036245155686[2] = 0;
   out_8795495036245155686[3] = 1;
   out_8795495036245155686[4] = 0;
   out_8795495036245155686[5] = 0;
   out_8795495036245155686[6] = 0;
   out_8795495036245155686[7] = 0;
   out_8795495036245155686[8] = 0;
   out_8795495036245155686[9] = 0;
   out_8795495036245155686[10] = 0;
   out_8795495036245155686[11] = 0;
   out_8795495036245155686[12] = 0;
   out_8795495036245155686[13] = 0;
   out_8795495036245155686[14] = 0;
   out_8795495036245155686[15] = 0;
   out_8795495036245155686[16] = 0;
   out_8795495036245155686[17] = 0;
   out_8795495036245155686[18] = 0;
   out_8795495036245155686[19] = 0;
   out_8795495036245155686[20] = 0;
   out_8795495036245155686[21] = 0;
   out_8795495036245155686[22] = 0;
   out_8795495036245155686[23] = 0;
   out_8795495036245155686[24] = 0;
   out_8795495036245155686[25] = 0;
   out_8795495036245155686[26] = 1;
   out_8795495036245155686[27] = 0;
   out_8795495036245155686[28] = 0;
   out_8795495036245155686[29] = 0;
   out_8795495036245155686[30] = 0;
   out_8795495036245155686[31] = 0;
   out_8795495036245155686[32] = 0;
   out_8795495036245155686[33] = 0;
   out_8795495036245155686[34] = 0;
   out_8795495036245155686[35] = 0;
   out_8795495036245155686[36] = 0;
   out_8795495036245155686[37] = 0;
   out_8795495036245155686[38] = 0;
   out_8795495036245155686[39] = 0;
   out_8795495036245155686[40] = 0;
   out_8795495036245155686[41] = 0;
   out_8795495036245155686[42] = 0;
   out_8795495036245155686[43] = 0;
   out_8795495036245155686[44] = 0;
   out_8795495036245155686[45] = 0;
   out_8795495036245155686[46] = 0;
   out_8795495036245155686[47] = 0;
   out_8795495036245155686[48] = 0;
   out_8795495036245155686[49] = 1;
   out_8795495036245155686[50] = 0;
   out_8795495036245155686[51] = 0;
   out_8795495036245155686[52] = 0;
   out_8795495036245155686[53] = 0;
   out_8795495036245155686[54] = 0;
   out_8795495036245155686[55] = 0;
   out_8795495036245155686[56] = 0;
   out_8795495036245155686[57] = 0;
   out_8795495036245155686[58] = 0;
   out_8795495036245155686[59] = 0;
   out_8795495036245155686[60] = 0;
   out_8795495036245155686[61] = 0;
   out_8795495036245155686[62] = 0;
   out_8795495036245155686[63] = 0;
   out_8795495036245155686[64] = 0;
   out_8795495036245155686[65] = 0;
   out_8795495036245155686[66] = 0;
   out_8795495036245155686[67] = 0;
   out_8795495036245155686[68] = 0;
   out_8795495036245155686[69] = 0;
   out_8795495036245155686[70] = 0;
   out_8795495036245155686[71] = 0;
   out_8795495036245155686[72] = 1;
   out_8795495036245155686[73] = 0;
   out_8795495036245155686[74] = 0;
   out_8795495036245155686[75] = 0;
   out_8795495036245155686[76] = 0;
   out_8795495036245155686[77] = 0;
   out_8795495036245155686[78] = 0;
   out_8795495036245155686[79] = 0;
   out_8795495036245155686[80] = 0;
   out_8795495036245155686[81] = 0;
   out_8795495036245155686[82] = 0;
   out_8795495036245155686[83] = 0;
   out_8795495036245155686[84] = 0;
   out_8795495036245155686[85] = 0;
   out_8795495036245155686[86] = 0;
   out_8795495036245155686[87] = 0;
}
void h_13(double *state, double *unused, double *out_8364010069648976723) {
   out_8364010069648976723[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8364010069648976723[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8364010069648976723[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2336756164620082167) {
   out_2336756164620082167[0] = 0;
   out_2336756164620082167[1] = 0;
   out_2336756164620082167[2] = 0;
   out_2336756164620082167[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2336756164620082167[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2336756164620082167[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2336756164620082167[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2336756164620082167[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2336756164620082167[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2336756164620082167[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2336756164620082167[10] = 0;
   out_2336756164620082167[11] = 0;
   out_2336756164620082167[12] = 0;
   out_2336756164620082167[13] = 0;
   out_2336756164620082167[14] = 0;
   out_2336756164620082167[15] = 0;
   out_2336756164620082167[16] = 0;
   out_2336756164620082167[17] = 0;
   out_2336756164620082167[18] = 0;
   out_2336756164620082167[19] = 0;
   out_2336756164620082167[20] = 0;
   out_2336756164620082167[21] = 0;
   out_2336756164620082167[22] = 0;
   out_2336756164620082167[23] = 0;
   out_2336756164620082167[24] = 0;
   out_2336756164620082167[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2336756164620082167[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2336756164620082167[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2336756164620082167[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2336756164620082167[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2336756164620082167[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2336756164620082167[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2336756164620082167[32] = 0;
   out_2336756164620082167[33] = 0;
   out_2336756164620082167[34] = 0;
   out_2336756164620082167[35] = 0;
   out_2336756164620082167[36] = 0;
   out_2336756164620082167[37] = 0;
   out_2336756164620082167[38] = 0;
   out_2336756164620082167[39] = 0;
   out_2336756164620082167[40] = 0;
   out_2336756164620082167[41] = 0;
   out_2336756164620082167[42] = 0;
   out_2336756164620082167[43] = 0;
   out_2336756164620082167[44] = 0;
   out_2336756164620082167[45] = 0;
   out_2336756164620082167[46] = 0;
   out_2336756164620082167[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2336756164620082167[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2336756164620082167[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2336756164620082167[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2336756164620082167[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2336756164620082167[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2336756164620082167[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2336756164620082167[54] = 0;
   out_2336756164620082167[55] = 0;
   out_2336756164620082167[56] = 0;
   out_2336756164620082167[57] = 0;
   out_2336756164620082167[58] = 0;
   out_2336756164620082167[59] = 0;
   out_2336756164620082167[60] = 0;
   out_2336756164620082167[61] = 0;
   out_2336756164620082167[62] = 0;
   out_2336756164620082167[63] = 0;
   out_2336756164620082167[64] = 0;
   out_2336756164620082167[65] = 0;
}
void h_14(double *state, double *unused, double *out_7222384130018568816) {
   out_7222384130018568816[0] = state[10];
   out_7222384130018568816[1] = state[11];
   out_7222384130018568816[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2440040938624456099) {
   out_2440040938624456099[0] = 0;
   out_2440040938624456099[1] = 0;
   out_2440040938624456099[2] = 0;
   out_2440040938624456099[3] = 0;
   out_2440040938624456099[4] = 0;
   out_2440040938624456099[5] = 0;
   out_2440040938624456099[6] = 0;
   out_2440040938624456099[7] = 0;
   out_2440040938624456099[8] = 0;
   out_2440040938624456099[9] = 0;
   out_2440040938624456099[10] = 1;
   out_2440040938624456099[11] = 0;
   out_2440040938624456099[12] = 0;
   out_2440040938624456099[13] = 0;
   out_2440040938624456099[14] = 0;
   out_2440040938624456099[15] = 0;
   out_2440040938624456099[16] = 0;
   out_2440040938624456099[17] = 0;
   out_2440040938624456099[18] = 0;
   out_2440040938624456099[19] = 0;
   out_2440040938624456099[20] = 0;
   out_2440040938624456099[21] = 0;
   out_2440040938624456099[22] = 0;
   out_2440040938624456099[23] = 0;
   out_2440040938624456099[24] = 0;
   out_2440040938624456099[25] = 0;
   out_2440040938624456099[26] = 0;
   out_2440040938624456099[27] = 0;
   out_2440040938624456099[28] = 0;
   out_2440040938624456099[29] = 0;
   out_2440040938624456099[30] = 0;
   out_2440040938624456099[31] = 0;
   out_2440040938624456099[32] = 0;
   out_2440040938624456099[33] = 1;
   out_2440040938624456099[34] = 0;
   out_2440040938624456099[35] = 0;
   out_2440040938624456099[36] = 0;
   out_2440040938624456099[37] = 0;
   out_2440040938624456099[38] = 0;
   out_2440040938624456099[39] = 0;
   out_2440040938624456099[40] = 0;
   out_2440040938624456099[41] = 0;
   out_2440040938624456099[42] = 0;
   out_2440040938624456099[43] = 0;
   out_2440040938624456099[44] = 0;
   out_2440040938624456099[45] = 0;
   out_2440040938624456099[46] = 0;
   out_2440040938624456099[47] = 0;
   out_2440040938624456099[48] = 0;
   out_2440040938624456099[49] = 0;
   out_2440040938624456099[50] = 0;
   out_2440040938624456099[51] = 0;
   out_2440040938624456099[52] = 0;
   out_2440040938624456099[53] = 0;
   out_2440040938624456099[54] = 0;
   out_2440040938624456099[55] = 0;
   out_2440040938624456099[56] = 1;
   out_2440040938624456099[57] = 0;
   out_2440040938624456099[58] = 0;
   out_2440040938624456099[59] = 0;
   out_2440040938624456099[60] = 0;
   out_2440040938624456099[61] = 0;
   out_2440040938624456099[62] = 0;
   out_2440040938624456099[63] = 0;
   out_2440040938624456099[64] = 0;
   out_2440040938624456099[65] = 0;
}
void h_33(double *state, double *unused, double *out_4663909138174759435) {
   out_4663909138174759435[0] = state[16];
   out_4663909138174759435[1] = state[17];
   out_4663909138174759435[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5332316336718853054) {
   out_5332316336718853054[0] = 0;
   out_5332316336718853054[1] = 0;
   out_5332316336718853054[2] = 0;
   out_5332316336718853054[3] = 0;
   out_5332316336718853054[4] = 0;
   out_5332316336718853054[5] = 0;
   out_5332316336718853054[6] = 0;
   out_5332316336718853054[7] = 0;
   out_5332316336718853054[8] = 0;
   out_5332316336718853054[9] = 0;
   out_5332316336718853054[10] = 0;
   out_5332316336718853054[11] = 0;
   out_5332316336718853054[12] = 0;
   out_5332316336718853054[13] = 0;
   out_5332316336718853054[14] = 0;
   out_5332316336718853054[15] = 0;
   out_5332316336718853054[16] = 1;
   out_5332316336718853054[17] = 0;
   out_5332316336718853054[18] = 0;
   out_5332316336718853054[19] = 0;
   out_5332316336718853054[20] = 0;
   out_5332316336718853054[21] = 0;
   out_5332316336718853054[22] = 0;
   out_5332316336718853054[23] = 0;
   out_5332316336718853054[24] = 0;
   out_5332316336718853054[25] = 0;
   out_5332316336718853054[26] = 0;
   out_5332316336718853054[27] = 0;
   out_5332316336718853054[28] = 0;
   out_5332316336718853054[29] = 0;
   out_5332316336718853054[30] = 0;
   out_5332316336718853054[31] = 0;
   out_5332316336718853054[32] = 0;
   out_5332316336718853054[33] = 0;
   out_5332316336718853054[34] = 0;
   out_5332316336718853054[35] = 0;
   out_5332316336718853054[36] = 0;
   out_5332316336718853054[37] = 0;
   out_5332316336718853054[38] = 0;
   out_5332316336718853054[39] = 1;
   out_5332316336718853054[40] = 0;
   out_5332316336718853054[41] = 0;
   out_5332316336718853054[42] = 0;
   out_5332316336718853054[43] = 0;
   out_5332316336718853054[44] = 0;
   out_5332316336718853054[45] = 0;
   out_5332316336718853054[46] = 0;
   out_5332316336718853054[47] = 0;
   out_5332316336718853054[48] = 0;
   out_5332316336718853054[49] = 0;
   out_5332316336718853054[50] = 0;
   out_5332316336718853054[51] = 0;
   out_5332316336718853054[52] = 0;
   out_5332316336718853054[53] = 0;
   out_5332316336718853054[54] = 0;
   out_5332316336718853054[55] = 0;
   out_5332316336718853054[56] = 0;
   out_5332316336718853054[57] = 0;
   out_5332316336718853054[58] = 0;
   out_5332316336718853054[59] = 0;
   out_5332316336718853054[60] = 0;
   out_5332316336718853054[61] = 0;
   out_5332316336718853054[62] = 1;
   out_5332316336718853054[63] = 0;
   out_5332316336718853054[64] = 0;
   out_5332316336718853054[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3075168618539510648) {
  H(in_vec, out_3075168618539510648);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1090245281905906660) {
  err_fun(nom_x, delta_x, out_1090245281905906660);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8851414583690127304) {
  inv_err_fun(nom_x, true_x, out_8851414583690127304);
}
void live_H_mod_fun(double *state, double *out_2951829955177005887) {
  H_mod_fun(state, out_2951829955177005887);
}
void live_f_fun(double *state, double dt, double *out_3814539948165517167) {
  f_fun(state,  dt, out_3814539948165517167);
}
void live_F_fun(double *state, double dt, double *out_7875956373086618253) {
  F_fun(state,  dt, out_7875956373086618253);
}
void live_h_4(double *state, double *unused, double *out_308485439684569826) {
  h_4(state, unused, out_308485439684569826);
}
void live_H_4(double *state, double *unused, double *out_448820613655623243) {
  H_4(state, unused, out_448820613655623243);
}
void live_h_9(double *state, double *unused, double *out_7222384130018568816) {
  h_9(state, unused, out_7222384130018568816);
}
void live_H_9(double *state, double *unused, double *out_2440040938624456099) {
  H_9(state, unused, out_2440040938624456099);
}
void live_h_10(double *state, double *unused, double *out_7807615225781965650) {
  h_10(state, unused, out_7807615225781965650);
}
void live_H_10(double *state, double *unused, double *out_106603328486207745) {
  H_10(state, unused, out_106603328486207745);
}
void live_h_12(double *state, double *unused, double *out_8240029641751488420) {
  h_12(state, unused, out_8240029641751488420);
}
void live_H_12(double *state, double *unused, double *out_7218307700026827249) {
  H_12(state, unused, out_7218307700026827249);
}
void live_h_31(double *state, double *unused, double *out_4739257077166324131) {
  h_31(state, unused, out_4739257077166324131);
}
void live_H_31(double *state, double *unused, double *out_8482873341357710658) {
  H_31(state, unused, out_8482873341357710658);
}
void live_h_32(double *state, double *unused, double *out_2545771817069536442) {
  h_32(state, unused, out_2545771817069536442);
}
void live_H_32(double *state, double *unused, double *out_8795495036245155686) {
  H_32(state, unused, out_8795495036245155686);
}
void live_h_13(double *state, double *unused, double *out_8364010069648976723) {
  h_13(state, unused, out_8364010069648976723);
}
void live_H_13(double *state, double *unused, double *out_2336756164620082167) {
  H_13(state, unused, out_2336756164620082167);
}
void live_h_14(double *state, double *unused, double *out_7222384130018568816) {
  h_14(state, unused, out_7222384130018568816);
}
void live_H_14(double *state, double *unused, double *out_2440040938624456099) {
  H_14(state, unused, out_2440040938624456099);
}
void live_h_33(double *state, double *unused, double *out_4663909138174759435) {
  h_33(state, unused, out_4663909138174759435);
}
void live_H_33(double *state, double *unused, double *out_5332316336718853054) {
  H_33(state, unused, out_5332316336718853054);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
